package generate

import "com.github.denisbytes.goimageai/view/layout"
import "com.github.denisbytes.goimageai/types"
import "fmt"

type ViewData struct {
    Images []types.Image
}

templ Index(data ViewData){
    @layout.App(true){
        <div class="flex w-full h-[calc(100vh-69px)]">
            <div class="w-[400px] border-r border-gray-700 p-4">
                @Form()
            </div>
            <div class="flex-1 bg-base-300 h-full">
                @Gallery(data.Images)
            </div>
        </div>
    }
}

templ Gallery(images []types.Image){
    <div class="grid grid-cols-4 p-4 gap-4 w-full" id="gallery">
        for _,image := range images {
            @GalleryImage(image)
        }
    </div>
}

templ GalleryImage(image types.Image){
    if image.Status == types.ImageStatusCompleted {
        <div class="bg-green-100 rounded-xl aspect-[2/3] cursor-pointer">
            <img src={image.ImageLocation} class="object-cover rounded-xl" />
        </div>
    } else if image.Status == types.ImageStatusFailed {
        <div class="bg-red-100 rounded-xl aspect-[2/3] flex justify-center items-center text-center">
            <i class="fa-solid fa-bug"></i>
        </div>
    } else if image.Status == types.ImageStatusPending{
        <div hx-get={fmt.Sprintf("/generate/image/status/%d", image.ID)} 
            hx-trigger="load delay:3s" 
            class="bg-red-100 rounded-xl aspect-[2/3] flex justify-center items-center text-center">
            <span class="loading loading-spinner loading-lg text-gray-600"></span>
        </div>
    }
}

templ Form(){
    <form hx-post="/generate" hx-swap="afterbegin" hx-target="#gallery">
        <div>
            <button class="btn btn-primary w-full">Generate</button>
        </div>
    </form>
}